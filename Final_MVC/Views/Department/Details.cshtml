@using Company.DAL.Entities
@model Department
@{
    ViewData["Title"] = "Details";
    <h1>Department Details</h1>
    <br />
    <br />
    <div class="details-container">
        <div class="form-group">
            <label asp-for="Code" class="col-form-label"></label>
            <input readonly asp-for="Code" class="form-control" id="code-input" />
            <span asp-validation-for="Code" class="text-danger" id="code-error"></span>
        </div>
        <div class="form-group">
            <label asp-for="Name" class="col-form-label"></label>
            <input readonly asp-for="Name" class="form-control" id="name-input" />
            <span asp-validation-for="Name" class="text-danger" id="name-error"></span>
        </div>
        <div class="form-group">
            <label asp-for="CreationDate" class="col-form-label"></label>
            <input readonly asp-for="CreationDate" class="form-control" id="creation-input" />
        </div>

        <div class="button-group">
            <a asp-controller="Department" asp-action="Edit" class="btn btn-warning" id="edit-btn">Edit</a>
            <a asp-controller="Department" asp-action="Index" class="btn btn-light" id="back-btn">Back To List</a>
        </div>
    </div>

    <style>
        body {
            background-color: #ffffff;
            font-family: 'Arial', sans-serif;
        }

        .details-container {
            background-color: #fff0f5;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 6px 15px rgba(128, 0, 128, 0.2);
            max-width: 600px;
            margin: 50px auto;
            border: 3px solid #800080;
            position: relative;
        }

        h1 {
            color: #800080;
            text-align: center;
            margin-bottom: 20px;
            font-size: 2.5em;
            text-transform: uppercase;
            letter-spacing: 2px;
        }

        .form-group {
            margin-bottom: 20px;
        }

            .form-group label {
                color: #800080;
                font-weight: 600;
                margin-bottom: 5px;
                display: block;
            }

        .form-control {
            width: 100%;
            padding: 10px;
            border: 2px solid #ffb6c1;
            border-radius: 8px;
            background-color: #ffffff;
            color: #333;
            font-size: 1em;
            transition: all 0.3s ease;
        }

            .form-control.error-highlight {
                background-color: #fff0f5;
                border-color: #800080;
            }

        .text-danger {
            color: #800080;
            font-size: 0.9em;
        }

        .button-group {
            margin-top: 20px;
            text-align: center;
        }

        .btn {
            padding: 12px 25px;
            margin: 0 10px;
            border-radius: 10px;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .btn-warning {
            background-color: #800080;
            color: #ffffff;
            border: none;
        }

            .btn-warning:hover {
                background-color: #660066;
                transform: translateY(-2px);
                box-shadow: 0 4px 10px rgba(128, 0, 128, 0.4);
            }

        .btn-light {
            background-color: #ffffff;
            color: #800080;
            border: 2px solid #ffb6c1;
        }

            .btn-light:hover {
                background-color: #ffb6c1;
                color: #ffffff;
                border-color: #800080;
                transform: translateY(-2px);
                box-shadow: 0 4px 10px rgba(128, 0, 128, 0.4);
            }

        .click-effect {
            position: absolute;
            width: 0;
            height: 0;
            background: rgba(255, 182, 193, 0.5);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            transition: width 0.5s ease, height 0.5s ease;
        }
    </style>

    <script>
        // Add click effect to buttons
        document.querySelectorAll('.btn').forEach(button => {
            button.addEventListener('click', function(e) {
                const effect = document.createElement('span');
                effect.classList.add('click-effect');

                const rect = button.getBoundingClientRect();
                const x = e.clientX - rect.left;
                const y = e.clientY - rect.top;

                effect.style.left = x + 'px';
                effect.style.top = y + 'px';

                button.appendChild(effect);

                setTimeout(() => {
                    effect.style.width = '200px';
                    effect.style.height = '200px';
                }, 0);

                setTimeout(() => {
                    effect.remove();
                }, 500);
            });
        });

        // Highlight input background when validation error appears (simulated)
        function checkValidation() {
            const codeError = document.getElementById('code-error');
            const nameError = document.getElementById('name-error');
            const codeInput = document.getElementById('code-input');
            const nameInput = document.getElementById('name-input');

            // Simulate an error (since inputs are readonly, this is for demo purposes)
            setTimeout(() => {
                if (codeError.innerText === '') {
                    codeError.innerText = '';
                    codeInput.classList.add('error-highlight');
                }
                if (nameError.innerText === '') {
                    nameError.innerText = '';
                    nameInput.classList.add('error-highlight');
                }
            }, 2000);
        }

        // Run validation check on page load
        window.onload = checkValidation;
    </script>
    }